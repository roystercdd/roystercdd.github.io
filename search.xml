<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2024/10/01/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>首页</title>
    <url>/2024/10/01/%E9%A6%96%E9%A1%B5/</url>
    <content><![CDATA[<h1 id="二分"><a href="#二分" class="headerlink" title="二分"></a>二分</h1><h2 id="1）整数二分"><a href="#1）整数二分" class="headerlink" title="1）整数二分"></a>1）整数二分</h2><ul>
<li>有单调性的题目一定可以二分，但是用二分做的题目不一定拥有单调性。</li>
<li>二分的本质不是单调性，二分的本质是边界，两套模板如下：</li>
<li>套模板时经常容易出现边界问题，那么什么时候选择哪套模板？听了y总的思路后，结合我自己的想法，接下来解析两套模板：</li>
<li>首先想$check$函数，再想如何更新区间，如果是 $l&#x3D;mid$，那么补上$+1$，如果是 $r&#x3D;mid$，那么不需要补上$+1$</li>
<li>① 如果答案在右边，比如：找最大值，或者最后一个出现的位置；那么 $l&#x3D;mid$，那么对立面就是 $r&#x3D;mid-1$；$mid&#x3D; l+r+1&gt;&gt;1$</li>
<li>② 如果答案在左边，比如：找最小值，或者第一个出现的位置；那么$ r&#x3D;mid$，那么对立面就是 $l&#x3D;mid+1$；$mid&#x3D; l+r&gt;&gt;1$</li>
<li>对于第一种情况①，为什么要+1？可以想象一下，如果已经找到答案，$mid&#x3D;l&#x3D;r$，那么$mid&#x3D;l+r&gt;&gt;1$就还是$[l,r]$，又因为包含答案，所以再次更新结果还是$[l,r]$，就会陷入死循环，也就是我们说的边界问题</li>
<li>注意：二分一定是有解的，不可能无解，无解永远是题目的无解而不是二分的无解。</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 答案在左边，能取到答案</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bsearch_1</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">while</span>(l&lt;r) &#123;</span><br><span class="line">		<span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(<span class="built_in">check</span>(mid))</span><br><span class="line">			r=mid; <span class="comment">// [l,mid]</span></span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			l=mid<span class="number">+1</span>; <span class="comment">// [mid+1,r]</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 答案在右边，能取到答案</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bsearch_2</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">while</span>(l&lt;r) &#123;</span><br><span class="line">        <span class="comment">// 如何理解这个+1,见上述解析</span></span><br><span class="line">		<span class="type">int</span> mid=l+r<span class="number">+1</span>&gt;&gt;<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(<span class="built_in">check</span>(mid))</span><br><span class="line">			l=mid; <span class="comment">// [mid,r]</span></span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			r=mid<span class="number">-1</span>; <span class="comment">// [l,mid-1]</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> l;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>



<h2 id="2）解二分题步骤"><a href="#2）解二分题步骤" class="headerlink" title="2）解二分题步骤"></a>2）解二分题步骤</h2><ul>
<li><p>题目中出现求最值，首先想到二分&#x2F;贪心&#x2F;动态规划等算法</p>
</li>
<li><p>题目具有单调性，则可以考虑用二分求解</p>
</li>
<li><p>分析使用哪个模板</p>
<ol>
<li><p>第一次出现，求第一个大于等于&#x2F;大于&#x2F;小于&#x2F;小于等于某个数的数，求解最小值，说明答案在左边，用第一个模板</p>
</li>
<li><p>最后一次出现，最后一个大于等于&#x2F;大于&#x2F;小于&#x2F;小于等某个数的数，求解最大值，说明答案在右边，用第二个模板</p>
</li>
</ol>
</li>
<li><p>写check函数</p>
</li>
</ul>
<h3 id="AcWing-789-数的范围"><a href="#AcWing-789-数的范围" class="headerlink" title="AcWing 789.数的范围"></a>AcWing 789.数的范围</h3><blockquote>
<p>题目链接：<a href="https://www.acwing.com/problem/content/791/">789. 数的范围 - AcWing题库</a></p>
</blockquote>
<img src="/2024/10/01/%E9%A6%96%E9%A1%B5/Typora\图片\image-20231113093325535.png" alt="image-20231113093325535" style="zoom:67%;">

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">pair</span>&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 题目描述: </span></span><br><span class="line"><span class="comment">// 找数字的左端点:大于等于x的第一个位置,q[mid]&gt;=x,更新:R=mid,L=mid+1,当l=r时,若q[r]!=x,说明第一个大于等于x的位置不是x,则找不到</span></span><br><span class="line"><span class="comment">// 找数字的右端点:大于等于x的最后一个位置,q[mid]&lt;=x,更新:L=mid,R=mid-1,当l=r时,若q[r]!=x,说明最后一个大于等于x</span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> q[N];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">cin</span>&gt;&gt;q[i];</span><br><span class="line">	<span class="comment">// m次询问</span></span><br><span class="line">	<span class="keyword">while</span>(m--) &#123;</span><br><span class="line">		<span class="type">int</span> x;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">		<span class="comment">// 二分x的左端点</span></span><br><span class="line">		<span class="type">int</span> l=<span class="number">0</span>,r=n<span class="number">-1</span>; <span class="comment">// 区间范围</span></span><br><span class="line">		<span class="keyword">while</span>(l&lt;r) &#123;</span><br><span class="line">			<span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">			<span class="keyword">if</span>(q[mid]&gt;=x) r=mid;</span><br><span class="line">			<span class="keyword">else</span> l=mid+<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(q[r]==x) &#123;</span><br><span class="line">			<span class="comment">// 存在左端点,输出</span></span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;r&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">			</span><br><span class="line">			<span class="comment">// 继续找右端点,左端点继续从上一次搜索的终点开始找</span></span><br><span class="line">			r=n<span class="number">-1</span>;</span><br><span class="line">			<span class="keyword">while</span>(l&lt;r) &#123;</span><br><span class="line">				<span class="type">int</span> mid=l+r+<span class="number">1</span>&gt;&gt;<span class="number">1</span>;</span><br><span class="line">				<span class="keyword">if</span>(q[mid]&lt;=x) l=mid;</span><br><span class="line">				<span class="keyword">else</span> r=mid<span class="number">-1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;r&lt;&lt;<span class="built_in">endl</span>; <span class="comment">// 输出一组解</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;-1 -1&quot;</span>&lt;&lt;<span class="built_in">endl</span>;	</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="洛谷-P1873-EKO-砍树"><a href="#洛谷-P1873-EKO-砍树" class="headerlink" title="洛谷 P1873.EKO&#x2F;砍树"></a>洛谷 P1873.EKO&#x2F;砍树</h3><blockquote>
<p>题目链接：[P1873 <a href="https://www.luogu.com.cn/problem/P1873">COCI 2011&#x2F;2012 #5] EKO &#x2F; 砍树 - 洛谷 </a></p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">pair</span>&lt;ll,ll&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解题思路: </span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> ll N=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line">ll n,m; <span class="comment">// n:树的数量,m:要的木材总长度</span></span><br><span class="line">ll a[N]; <span class="comment">// 存储树的高度</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果有木头有这么多,就返回true</span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">check</span><span class="params">(ll mid)</span> &#123;</span><br><span class="line">	ll cnt=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">		<span class="keyword">if</span>(a[i]-mid&gt;<span class="number">0</span>) &#123;</span><br><span class="line">			cnt+=a[i]-mid;</span><br><span class="line">		&#125;	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(cnt&gt;=m) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	ll mmax=INT_MIN;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">		mmax=max(mmax,a[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	ll l=<span class="number">0</span>; <span class="comment">// 锯子最小高度为0,全切</span></span><br><span class="line">	ll r=mmax; <span class="comment">// 最高切完最大的这棵树,一棵都不切</span></span><br><span class="line">	<span class="comment">// 要找最大值,那么答案在右边,所以压缩左边界</span></span><br><span class="line">	<span class="keyword">while</span>(l&lt;r) &#123;</span><br><span class="line">		ll mid=l+r+<span class="number">1</span>&gt;&gt;<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(check(mid)) &#123;</span><br><span class="line">			l=mid;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			r=mid<span class="number">-1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;l&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="洛谷-P1678-烦恼的高考志愿"><a href="#洛谷-P1678-烦恼的高考志愿" class="headerlink" title="洛谷 P1678.烦恼的高考志愿"></a>洛谷 P1678.烦恼的高考志愿</h3><blockquote>
<p>题目链接：<a href="https://www.luogu.com.cn/problem/P1678">P1678 烦恼的高考志愿 - 洛谷 </a></p>
</blockquote>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">pair</span>&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解题思路: 开ll不然过不了</span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> ll N=<span class="number">1e5</span>+<span class="number">5</span>;</span><br><span class="line">ll n,m;</span><br><span class="line">ll a[N]; <span class="comment">// 存储学校的分数线</span></span><br><span class="line">ll b[N]; <span class="comment">// 存储每个同学的估分</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">	<span class="comment">// n个学校,m个同学</span></span><br><span class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;a[i]);	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=m;i++) &#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;b[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	sort(a+<span class="number">1</span>,a+<span class="number">1</span>+n);</span><br><span class="line">	ll cnt=<span class="number">0</span>;</span><br><span class="line">	<span class="comment">// 遍历所有同学</span></span><br><span class="line">	<span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=m;i++) &#123;</span><br><span class="line">		<span class="comment">// 卫语言风格</span></span><br><span class="line">		<span class="comment">// 比最小值还小,跳过</span></span><br><span class="line">		<span class="keyword">if</span>(b[i]&lt;=a[<span class="number">1</span>]) &#123;</span><br><span class="line">			cnt+=<span class="built_in">abs</span>(b[i]-a[<span class="number">1</span>]);</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(b[i]&gt;=a[n]) &#123;</span><br><span class="line">			cnt+=<span class="built_in">abs</span>(b[i]-a[n]);</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		ll l=<span class="number">1</span>,r=n; <span class="comment">// 边界是[1,n]</span></span><br><span class="line">		<span class="keyword">while</span>(l&lt;r) &#123;</span><br><span class="line">			ll mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">			<span class="comment">// 注意找第一个是答案在左边的问题,所以要压缩右边界</span></span><br><span class="line">			<span class="comment">// 找第一个大于等于b[i]的第一个学校的分数线a[l]</span></span><br><span class="line">			<span class="comment">// 那么最后一个小于b[i]的元素的下标就应该是a[l-1]</span></span><br><span class="line">			<span class="keyword">if</span>(a[mid]&gt;=b[i])</span><br><span class="line">				r=mid;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				l=mid+<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// 取二者之中的最小值</span></span><br><span class="line">		cnt+=min(<span class="built_in">abs</span>(a[l]-b[i]),<span class="built_in">abs</span>(a[l<span class="number">-1</span>]-b[i]));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;cnt;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h2 id="2）浮点二分"><a href="#2）浮点二分" class="headerlink" title="2）浮点二分"></a>2）浮点二分</h2><h3 id="AcWing-790-数的三次方根"><a href="#AcWing-790-数的三次方根" class="headerlink" title="AcWing 790. 数的三次方根"></a>AcWing 790. 数的三次方根</h3><blockquote>
<p>题目链接：<a href="https://www.acwing.com/problem/content/792/">790. 数的三次方根 - AcWing题库</a></p>
</blockquote>
<ul>
<li>对于开二次方根，因为开出来一定是正数，所以可以设置$l&#x3D;0$，$r&#x3D;x$，但是三次方根可能有负数，不能单纯的取 $l&#x3D;-x$，$r&#x3D;x$，这样的话输入的$x$是正数，范围是$[-x,x]$，输入的数是负数，范围是$[x,-x]$就会出大问题。</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="type">double</span> x;</span><br><span class="line">	cin&gt;&gt;x;</span><br><span class="line">	<span class="comment">// 因为是开三次方根,所以要考虑负数的情况</span></span><br><span class="line">    <span class="comment">// 注意</span></span><br><span class="line">	<span class="type">double</span> l=<span class="number">-100000</span>,r=<span class="number">100000</span>;</span><br><span class="line">	<span class="comment">// 保留6位小数就1e-8(基于经验),同理保留4位就1e-6</span></span><br><span class="line">	<span class="keyword">while</span>(r-l&gt;<span class="number">1e-8</span>) &#123;</span><br><span class="line">		<span class="type">double</span> mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">		<span class="keyword">if</span>(mid*mid*mid&gt;=x)</span><br><span class="line">			r=mid;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			l=mid;</span><br><span class="line">	&#125;</span><br><span class="line">	cout&lt;&lt;<span class="built_in">setprecision</span>(<span class="number">6</span>)&lt;&lt;fixed&lt;&lt;l&lt;&lt;endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>算法竞赛</tag>
      </tags>
  </entry>
</search>
